services:

  # ----------------
  # backups demo
  # ----------------

  # user db with open ports for local development
#  user_db:
#    container_name: user_db
#    image: postgres:16.4
#    env_file:
#      - .env
#    environment:
#      POSTGRES_USER: ${USER_SERVICE_POSTGRES_USER}
#      POSTGRES_PASSWORD: ${USER_SERVICE_POSTGRES_PASSWORD}
#      POSTGRES_DB: ${USER_SERVICE_POSTGRES_DB}
#      PGDATA: /var/lib/postgresql/data
#    volumes:
#      - ./.databases/user/backup/postgresql/data:/var/lib/postgresql/data
#    ports:
#      - 5432:5432
#    restart: unless-stopped

  # ----------------
  # replication demo
  # ----------------

  #  master db
  master_user_db:
    container_name: master_user_db
    image: postgres:16.4
    user: postgres
    env_file:
      - .env
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${MASTER_POSTGRES_USER}
      POSTGRES_DB: ${MASTER_POSTGRES_DB}
      POSTGRES_PASSWORD: ${MASTER_POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres 
      -c wal_level=replica 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
    volumes:
      - ../.replication/00_init.sql:/docker-entrypoint-initdb.d/00_init.sql
      - ./.databases/user/master/postgresql/data:/var/lib/postgresql/data
    networks:
      - user-pg-network
    restart: unless-stopped


  # replica db
  replica_user_db:
    container_name: replica_user_db
    image: postgres:16.4
    user: postgres
    env_file:
      - .env
    ports:
      - 5433:5432
    environment:
      PGUSER: ${REPLICA_POSTGRES_USER}
      PGPASSWORD: ${REPLICA_POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./.databases/user/replica/postgresql/data:/var/lib/postgresql/data
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=master_user_db --port=5432
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    networks:
      - user-pg-network
    restart: unless-stopped
    depends_on:
      - master_user_db

networks:
  user-pg-network:
    driver: bridge